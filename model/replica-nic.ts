/* tslint:disable */
/* eslint-disable */
/**
 * VM Auto Scaling API
 * The VM Auto Scaling Service enables IONOS clients to horizontally scale the number of VM replicas based on configured rules. You can use VM Auto Scaling to ensure that you have a sufficient number of replicas to handle your application loads at all times.  For this purpose, create a VM Auto Scaling Group that contains the server replicas. The VM Auto Scaling Service ensures that the number of replicas in the group is always within the defined limits.   When scaling policies are set, VM Auto Scaling creates or deletes replicas according to the requirements of your applications. For each policy, specified \'scale-in\' and \'scale-out\' actions are performed when the corresponding thresholds are reached.
 *
 * The version of the OpenAPI document: 1-SDK.1
 * Contact: support@cloud.ionos.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import { NicFirewallRule } from './nic-firewall-rule';
import { NicFlowLog } from './nic-flow-log';
import { TargetGroup } from './target-group';

/**
 * 
 * @export
 * @interface ReplicaNic
 */
export interface ReplicaNic {

    /**
     * The LAN ID of this replica NIC.
     * @type {number}
     * @memberof ReplicaNic
     */
    lan: number;

    /**
     * The replica NIC name.
     * @type {string}
     * @memberof ReplicaNic
     */
    name: string;

    /**
     * DHCP for this replica NIC. This is an optional attribute with the default value \'TRUE\' if not specified in the request payload or as null.
     * @type {boolean}
     * @memberof ReplicaNic
     */
    dhcp?: boolean | null;

    /**
     * Activate or deactivate the firewall. By default, an active firewall without any defined rules will block all incoming network traffic except for the firewall rules that explicitly allows certain protocols, IP addresses and ports.
     * @type {boolean}
     * @memberof ReplicaNic
     */
    firewallActive?: boolean | null;

    /**
     * The type of firewall rules that will be allowed on the NIC. If not specified, the default INGRESS value is used.
     * @type {string}
     * @memberof ReplicaNic
     */
    firewallType?: ReplicaNicFirewallTypeEnum;

    /**
     * List of all flow logs for the specified NIC.
     * @type {Array<NicFlowLog>}
     * @memberof ReplicaNic
     */
    flowLogs?: Array<NicFlowLog> | null;

    /**
     * List of all firewall rules for the specified NIC.
     * @type {Array<NicFirewallRule>}
     * @memberof ReplicaNic
     */
    firewallRules?: Array<NicFirewallRule> | null;

    /**
     * 
     * @type {TargetGroup}
     * @memberof ReplicaNic
     */
    targetGroup?: TargetGroup;
}






/**
    * @export
    * @enum {string}
    */
export enum ReplicaNicFirewallTypeEnum {
    Ingress = 'INGRESS',
    Egress = 'EGRESS',
    Bidirectional = 'BIDIRECTIONAL'
}






