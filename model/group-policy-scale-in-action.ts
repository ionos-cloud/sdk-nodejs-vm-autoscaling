/* tslint:disable */
/* eslint-disable */
/**
 * VM Auto Scaling API
 * The VM Auto Scaling Service enables IONOS clients to horizontally scale the number of VM replicas based on configured rules. You can use VM Auto Scaling to ensure that you have a sufficient number of replicas to handle your application loads at all times.  For this purpose, create a VM Auto Scaling Group that contains the server replicas. The VM Auto Scaling Service ensures that the number of replicas in the group is always within the defined limits.   When scaling policies are set, VM Auto Scaling creates or deletes replicas according to the requirements of your applications. For each policy, specified \'scale-in\' and \'scale-out\' actions are performed when the corresponding thresholds are reached.
 *
 * The version of the OpenAPI document: 1-SDK.1
 * Contact: support@cloud.ionos.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import { ActionAmount } from './action-amount';
import { TerminationPolicyType } from './termination-policy-type';

/**
 * Defines the action to be taken when the \'scaleInThreshold\' is exceeded. Here, scaling is always about removing VMs associated with this VM Auto Scaling Group. By default, the termination policy is \'OLDEST_SERVER_FIRST\' is effective.
 * @export
 * @interface GroupPolicyScaleInAction
 */
export interface GroupPolicyScaleInAction {

    /**
     * \'amountType=ABSOLUTE\' specifies the absolute number of VMs that are added or removed. The value must be between 1 to 10.   \'amountType=PERCENTAGE\' specifies the percentage value that is applied to the current number of replicas of the VM Auto Scaling Group. The value must be between 1 to 200.   At least one VM is always added or removed.   Note that for \'SCALE_IN\' operations, volumes are not deleted after the server is deleted.
     * @type {number}
     * @memberof GroupPolicyScaleInAction
     */
    amount: number;

    /**
     * 
     * @type {ActionAmount}
     * @memberof GroupPolicyScaleInAction
     */
    amountType: ActionAmount;

    /**
     * The minimum time that elapses after the start of this scaling action until the next scaling action is started. With a scaling action in progress, no second scaling action is started for the same VM Auto Scaling Group. Instead, the metric is re-evaluated after the current scaling action completes (either successfully or with errors). This is currently validated with a minimum value of 2 minutes and a maximum value of 24 hours. The default value is 5 minutes if not specified.
     * @type {string}
     * @memberof GroupPolicyScaleInAction
     */
    cooldownPeriod?: string | null;

    /**
     * 
     * @type {TerminationPolicyType}
     * @memberof GroupPolicyScaleInAction
     */
    terminationPolicy?: TerminationPolicyType | null;

    /**
     * If set to `true`, when deleting an replica during scale in, any attached volume will also be deleted. When set to `false`, all volumes remain in the datacenter and must be deleted manually.  **Note**, that every scale-out creates new volumes. When they are not deleted, they will eventually use all of your contracts resource limits. At this point, scaling out would not be possible anymore.
     * @type {boolean}
     * @memberof GroupPolicyScaleInAction
     */
    deleteVolumes: boolean;
}


